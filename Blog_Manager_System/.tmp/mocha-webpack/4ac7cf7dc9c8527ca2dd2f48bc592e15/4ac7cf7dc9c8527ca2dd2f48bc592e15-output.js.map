{"version":3,"file":"4ac7cf7dc9c8527ca2dd2f48bc592e15-output.js","sources":["webpack/bootstrap 650d4f6758f220dc9724","/Users/closer/workspace/blog_tset副本/.tmp/mocha-webpack/4ac7cf7dc9c8527ca2dd2f48bc592e15-entry.js","/Users/closer/workspace/blog_tset副本/test [object Object]","/Users/closer/workspace/blog_tset副本/test/article/article.test.js","external \"crypto\"","external \"should\"","/Users/closer/workspace/blog_tset副本/app.js","external \"express\"","external \"path\"","external \"serve-favicon\"","external \"morgan\"","external \"cookie-parser\"","external \"body-parser\"","external \"express-session\"","external \"mongoose\"","external \"connect-mongo\"","external \"moment\"","/Users/closer/workspace/blog_tset副本/configs/main.js","/Users/closer/workspace/blog_tset副本/app/controller/main/main.js","/Users/closer/workspace/blog_tset副本/app/models/article.js","/Users/closer/workspace/blog_tset副本/app/schema/article.js","/Users/closer/workspace/blog_tset副本/app/models/user.js","/Users/closer/workspace/blog_tset副本/app/schema/user.js","external \"bcrypt\"","/Users/closer/workspace/blog_tset副本/app/models/tag.js","/Users/closer/workspace/blog_tset副本/app/schema/tag.js","external \"marked\"","/Users/closer/workspace/blog_tset副本/app/controller/main/user.js","/Users/closer/workspace/blog_tset副本/configs/admin.js","/Users/closer/workspace/blog_tset副本/app/controller/admin/article.js","/Users/closer/workspace/blog_tset副本/app/controller/admin/user.js","/Users/closer/workspace/blog_tset副本/configs/api.js","/Users/closer/workspace/blog_tset副本/app/controller/api/main.js","external \"underscore\"","external \"multer\"","external \"fs\"","/Users/closer/workspace/blog_tset副本/app/controller/api/user.js","/Users/closer/workspace/blog_tset副本/app/controller/api/showmore.js","/Users/closer/workspace/blog_tset副本/configs/manager.js","/Users/closer/workspace/blog_tset副本/app/controller/manager/main.js","/Users/closer/workspace/blog_tset副本/app/models/User.js","/Users/closer/workspace/blog_tset副本/test/tag/tag.test.js","/Users/closer/workspace/blog_tset副本/test/user/user.test.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 650d4f6758f220dc9724\n **/","\n    var testsContext = require.context(\"../../test\", false);\n\n    var runnable = testsContext.keys();\n\n    runnable.forEach(testsContext);\n    \n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./4ac7cf7dc9c8527ca2dd2f48bc592e15-entry.js\n ** module id = 0\n ** module chunks = 0\n **/","var map = {\n\t\"./article/article.test.js\": 2,\n\t\"./tag/tag.test.js\": 40,\n\t\"./user/user.test.js\": 41\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\treturn map[req] || (function() { throw new Error(\"Cannot find module '\" + req + \"'.\") }());\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** /Users/closer/workspace/blog_tset副本/test object Object\n ** module id = 1\n ** module chunks = 0\n **/","var crypto = require('crypto')\n\nfunction getRandomString(len) {\n  if (!len) len = 16\n\n  return crypto.randomBytes(Math.ceil(len / 2)).toString('hex')\n}\n\nvar should = require('should')\nvar app = require('../../app')\nvar Article = require('../../app/models/article')\n\nvar article\n\n// test\ndescribe('<Unit Test', function() {\n  describe('Model Article:', function() {\n    before(function(done) {\n      article = {\n        title: getRandomString(),\n        text: 'articleText'\n      }\n\n      done()\n    })\n   })\n\n    describe('Article save', function() {\n      it('should save without problems', function(done) {\n        var _article = new Article(article)\n\n        _article.save(function(err) {\n          should.not.exist(err)\n          _article.remove(function(err) {\n            should.not.exist(err)\n            done()\n          })\n        })\n      })\n\n      it('should have default pv 0', function(done) {\n        var _article = new Article(article)\n\n        _article.save(function(err) {\n          _article.pv.should.equal(0)\n\n          _article.remove(function(err) {\n            done()\n          })\n        })\n      })\n\n    after(function(done) {\n      // clear article info\n      done()\n    })\n  })\n})\n\n\n/*****************\n ** WEBPACK FOOTER\n ** /Users/closer/workspace/blog_tset副本/test/article/article.test.js\n ** module id = 2\n ** module chunks = 0\n **/","module.exports = require(\"crypto\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"crypto\"\n ** module id = 3\n ** module chunks = 0\n **/","module.exports = require(\"should\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"should\"\n ** module id = 4\n ** module chunks = 0\n **/","const express = require('express');\nconst path = require('path');\nconst favicon = require('serve-favicon');\nconst logger = require('morgan');\nconst cookieParser = require('cookie-parser');\nconst bodyParser = require('body-parser');\nconst session = require('express-session');\n\n\nconst mongoose = require('mongoose');\nconst mongoStore = require('connect-mongo')(session);\nconst port = process.env.PORT || 8080;//PORT=4000 node app\nconst app = express();\n\n\n// const dbUrl = 'mongodb://chicken:3320682@ds021694.mlab.com:21694/articleblog';\nconst dbUrl = 'mongodb://localhost/blog';\nmongoose.connect(dbUrl);\n\n\n// view engine setup\n\n\n\n// uncomment after placing your favicon in /public\n//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));\napp.use(logger('dev'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\n// app.use(favicon(__dirname + '/public/images/me.jpg'));\n\n\n\napp.use(session({\n  //防止篡改cookie\n  secret: 'Myblog',\n  key : 'blog',\n  cookie: {maxAge: 1000 * 60 * 60 * 24 * 30},//30 days\n  store: new mongoStore({\n    url: dbUrl,\n    //把session保存到mongodb的collection的sessions里\n    collection: 'sessions'\n  })\n}));\n\n\n//动态视图助手，本地变量\napp.locals.moment = require('moment');\n\n\nconst main = require('./configs/main')(app);\nconst admin = require('./configs/admin')(app);\nconst api = require('./configs/api')(app);\nconst manager = require('./configs/manager')(app);\n//模块挂载\napp.use('/', main);\napp.use('/admin', admin);\napp.use('/api', api);\napp.use('/manager', manager);\n\n\n\n// catch 404 and forward to error handler\napp.use(function(req, res, next) {\n  var err = new Error('Not Found');\n  err.status = 404;\n  next(err);\n});\n\n// error handlers\napp.set('views', path.join(__dirname, './app/views'));\napp.set('view engine', 'ejs');\n// development error handler\n// will print stacktrace\nif (app.get('env') === 'development') {\n  app.use(function(err, req, res, next) {\n    res.status(err.status || 500);\n    res.render('error', {\n      message: err.message,\n      error: err\n    });\n  });\n}\n\n// // production error handler\n// // no stacktraces leaked to user\napp.use(function(err, req, res, next) {\n  res.status(err.status || 500);\n  res.render('error', {\n    message: err.message,\n    error: {}\n  });\n});\n\napp.listen(port);\nconsole.log('Blog satrt on port:' + port);\nmodule.exports = app;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** /Users/closer/workspace/blog_tset副本/app.js\n ** module id = 5\n ** module chunks = 0\n **/","module.exports = require(\"express\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"express\"\n ** module id = 6\n ** module chunks = 0\n **/","module.exports = require(\"path\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"path\"\n ** module id = 7\n ** module chunks = 0\n **/","module.exports = require(\"serve-favicon\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"serve-favicon\"\n ** module id = 8\n ** module chunks = 0\n **/","module.exports = require(\"morgan\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"morgan\"\n ** module id = 9\n ** module chunks = 0\n **/","module.exports = require(\"cookie-parser\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"cookie-parser\"\n ** module id = 10\n ** module chunks = 0\n **/","module.exports = require(\"body-parser\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"body-parser\"\n ** module id = 11\n ** module chunks = 0\n **/","module.exports = require(\"express-session\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"express-session\"\n ** module id = 12\n ** module chunks = 0\n **/","module.exports = require(\"mongoose\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"mongoose\"\n ** module id = 13\n ** module chunks = 0\n **/","module.exports = require(\"connect-mongo\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"connect-mongo\"\n ** module id = 14\n ** module chunks = 0\n **/","module.exports = require(\"moment\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"moment\"\n ** module id = 15\n ** module chunks = 0\n **/","\nconst express = require('express');\nconst mainApp = express();\nconst path = require('path');\nmainApp.locals.moment = require('moment');\n\nlet main = (app) => {\n\nmainApp.set('views', path.join(__dirname, '../app/views/main'));\nmainApp.set('view engine', 'ejs');\n\n\nmainApp.use( (req, res, next) => {\n  let _user = req.session.user;\n  mainApp.locals.user = _user;\n  next();\n})\n\n\n\t//路由模块\n\tconst routers = {\n\t\tmain: require('../app/controller/main/main'),\n\t\tuser: require('../app/controller/main/user')\n\t};\n\n\t//主模块\n\tmainApp.use( '/', routers.main );\n\t//用户模块\n\tmainApp.use('/user', routers.user);\n \n\treturn mainApp;\n}\n\nmodule.exports = main;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** /Users/closer/workspace/blog_tset副本/configs/main.js\n ** module id = 16\n ** module chunks = 0\n **/","const express = require('express'),\n\t\t\trouter = express.Router(),\n\t\t\tArticle = require('../../models/article'),\n\t\t\tUser = require('../../models/user'),\n\t\t\tTag = require('../../models/tag'),\n\t\t\tmarked = require('marked');\n\nlet re = /<[^>]*>/g;\n\nrouter.get('/', (req, res, next) => {\n\tlet page = 0,\n\t\t\tlen,\n\t\t\ttitle;\n  const count = 6;\n  let index = count * page;\n  Article.count((err, count) => {\n  \tif (err) {\n  \t\tconsole.log(err);\n  \t};\n  \tlen = count;\n  });\n\tArticle\n\t.find({})\n\t.sort({'meta.createTime':-1})\n\t.limit(count)\n\t.skip(index)\n\t.populate('author')\n\t.populate('tag')\n\t.exec((err, articles) => {\n\t\tarticles.forEach((article,index) => {\n\t\t\tarticle.text = marked(article.text);\n\t\t\tarticle.text = article.text.replace(re,'');\n\t\t\tif (article.text.length > 300) {\n\t\t\t\tarticle.text = article.text.substring(0,300);\n\t\t\t\tarticle.text = article.text + ' ...';\n\t\t\t}\n\t\t})\n\t\tif (req.session.user && req.session.user.signature) {\n\t\t\ttitle = req.session.user.signature;\n\t\t} else {\n\t\t\ttitle = 'play and have fun'\n\t\t}\n\t\tres.render('index', { \n\t\t\ttitle: title,\n\t\t\tlen: len,\n\t\t\tpage: page,\n\t\t\tarticles: articles\n\t\t});\n\t})\n})\n\nrouter.get('/author/:id', (req, res, next) => {\n\tlet id = req.params.id,\n\t\t\tpage = 0,\n\t\t\tlen,\n\t\t\ttitle;\n  const count = 6;\n  let index = count * page;\n\tUser\n\t.findById({_id: id})\n\t.populate('articles')\n\t.exec((err, user) => {\n\t\tif (err) {\n\t\t\tconsole.log(err);\n\t\t\treturn res.redirect('/');\n\t\t}\n\t\tlen = user.articles.length;\n\t\tuser.articles.sort((a,b)=> {\n\t\t\treturn b.meta.createTime-a.meta.createTime;\n\t\t})\n\t\tuser.articles = user.articles.slice(index,index+count);\n\t\tuser.articles.forEach((article,index) => {\n\t\t\tarticle.text = marked(article.text);\n\t\t\tarticle.text = article.text.replace(re,'');\n\t\t\tif (article.text.length > 300) {\n\t\t\t\tarticle.text = article.text.substring(0,300);\n\t\t\t\tarticle.text = article.text + ' ...';\n\t\t\t}\n\t\t})\n\t\tif (user.signature) {\n\t\t\ttitle = user.signature;\n\t\t} else {\n\t\t\ttitle = user.name;\n\t\t}\n\n\t\tres.render('author', {\n\t\t\ttitle: title,\n\t\t\tlen: len,\n\t\t\tpage: page,\n\t\t\tUser: user\n\t\t})\n\t})\n})\n\nrouter.get('/article/:id', (req, res, next) => {\n\tlet id = req.params.id,\n\t\t\tpreArticle,\n\t\t\tnextArticle,\n\t\t\tlen;\n\tTag.find({}).sort({'articles':-1}).limit(10).then((tags) => {\n\t\tArticle.find({}).sort({'meta.createTime':-1}).then((articles) => {\n\t\t\treturn articles;\n\t\t}).then((articles)=>{\n\t\t\tArticle.update({_id:id}, {$inc: {pv: 1}}, function (err) {\n\t\t\t\tif (err) {\n\t\t\t\t\tconsole.log(err);  \n\t\t\t\t};\n\t\t\t})\n\t\t\tArticle\n\t\t\t.findById({_id: id})\n\t\t\t.populate('author')\n\t\t\t.populate('tag')\n\t\t\t.exec((err, article) => {\n\t\t\t\tconsole.log(article);\n\t\t\t\tUser.update({_id: article.author._id}, {$inc: {pv: 1}}, function (err) {\n\t\t\t\tif (err) {\n\t\t\t\t\t\tconsole.log(err);  \n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\n\t\t\t\tfor(let i = 0; i < articles.length; i++) {\n\t\t\t\t\tif (articles[i]._id.toString() == id) {\n\t\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\t\tpreArticle = false;\n\t\t\t\t\t\t\tnextArticle = articles[i+1];\n\t\t\t\t\t\t} else if (i === articles.length-1) {\n\t\t\t\t\t\t\tpreArticle = articles[i-1];\n\t\t\t\t\t\t\tnextArticle = false;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpreArticle = articles[i-1];\n\t\t\t\t\t\t\tnextArticle = articles[i+1];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlen = articles.length;\n\t\t\t\tarticles.sort(function(a,b){\n\t\t\t\t\treturn b.pv-a.pv;\n\t\t\t\t})\n\t\t\t\tarticles = articles.slice(0,10);\n\t\t\t\tarticle.text = marked(article.text);\n\t\t\t\tconsole.log(article.text);\n\t\t\t\tres.render('article', {\n\t\t\t\t\ttitle: article.title,\n\t\t\t\t\tarticle: article,\n\t\t\t\t\tarticles: articles,\n\t\t\t\t\tpreArticle: preArticle,\n\t\t\t\t\tnextArticle: nextArticle,\n\t\t\t\t\ttags: tags,\n\t\t\t\t\tlen: len\n\t\t\t\t})\n\t\t\t})\n\t\t})\n\t})\n})\n\nrouter.get('/article/tag/:id', (req, res, next) => {\n\t\tlet id = req.params.id,\n\t\t\tpage = parseInt(req.query.p, 10) || 0,\n\t    len;\n\tconst count = 6;\n\tlet index = count * page;\n\tTag.findById({_id: id}).populate('articles').then((tag) => {\n\t\tTag.find({}, (err, tags) => {\n\t\t\tif (err) {\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t};\n\t\t\tlen = tag.articles.length;\n\t\t\ttag.articles = tag.articles.slice(index,index+count);\n\t\t\tres.render('tag', {\n\t\t\t\ttitle: tag.name,\n\t\t\t\ttags: tags,\n\t\t\t\ttag: tag\n\t\t\t})\n\t\t})\n\t})\n})\n\nrouter.get('/results', (req, res, next) => {\n\tlet q = req.query.q,\n\t\t\tpage = parseInt(req.query.p, 10) || 0,\n\t    len;\n\tconst count = 6;\n\tlet index = count * page;\n\tArticle.count((err, count) => {\n  \tif (err) {\n  \t\tconsole.log(err);\n  \t};\n  \tlen = count;\n  });\n\tTag.find({}).then((tags) => {\n\t\tArticle\n\t\t.find({title: new RegExp(q + '.*', 'i')})\n\t\t.limit(count)\n\t\t.skip(index)\n\t\t.exec((err, articles) => {\n\t\t\tif (err) {\n\t\t\t\tconsole.log(err);\n\t\t\t\treturn res.redirect('/');\n\t\t\t}\n\n\t\t\t\t// user.articles.forEach(function (doc) {\n\t\t\t\t//   doc.text = markdown.toHTML(doc.text);\n\t\t\t\t// });\n\t\t\tres.render('result', {\n\t\t\t\ttitle: q,\n\t\t\t\tlen: len,\n\t\t\t\ttags:tags,\n\t\t\t\tpage: page,\n\t\t\t\tarticles: articles\n\t\t\t})\n\t\t})\n\t})\n})\n\n\n\nmodule.exports = router;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** /Users/closer/workspace/blog_tset副本/app/controller/main/main.js\n ** module id = 17\n ** module chunks = 0\n **/","const mongoose = require('mongoose');\nconst ArticleSchema = require('../schema/article');\n/**\n * [Movie description] 编译生成movie模型\n * @type {[type]} 第一个参数为这个模型的名字，第二个参数为模型骨架\n */\nconst Article = mongoose.model('Article', ArticleSchema);\n\nmodule.exports = Article;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** /Users/closer/workspace/blog_tset副本/app/models/article.js\n ** module id = 18\n ** module chunks = 0\n **/","const mongoose = require('mongoose');\nconst Schema = mongoose.Schema;\nconst ObjectId = Schema.Types.ObjectId;\n\nconst ArticleSchema = new mongoose.Schema({\n\tauthor: {type: ObjectId, ref: 'User'},\n\ttitle: String,\n\ttext: String,\n\ttag: {type: ObjectId, ref: 'Tag'},\n\tpv: {\n\t\ttype: Number,\n\t\tdefault: 0\n\t},\n\tmeta: {\n\t\tcreateTime: {\n\t\t\ttype: Date,\n\t\t\tdefault:Date.now()\n\t\t},\n\t\tupdateTime: {\n\t\t\ttype: Date,\n\t\t\tdefault:Date.now()\n\t\t}\n\t}\n})\nArticleSchema.pre('save', function (next) {\n\t//判断数据是否是新加的\n\tif(this.isNew) {\n\t\tthis.meta.createTime = this.meta.update = Date.now();\n\t} else {\n\t\tthis.meta,updateTime = Date.now()\n\t}\n\n\tnext();\n})\n\nArticleSchema.statics = {\n\t//用来查找数据库里所有数据\n\tfetch: function(cb) {\n\t\treturn this\n\t\t\t.find({})\n\t\t\t.sort('meta.updateTime') //按照更新时间排序\n\t\t\t.exec(cb) \t//执行回调方法\n\t}\n\t// //用来查询单条数据\n\t// findById: function(id, cb) {\n\t// \treturn this\n\t// \t\t.findOne({_id:id})\n\t// \t\t.exec(cb) \t//执行回调方法\n\t// }\n}\n\nmodule.exports = ArticleSchema;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** /Users/closer/workspace/blog_tset副本/app/schema/article.js\n ** module id = 19\n ** module chunks = 0\n **/","const mongoose = require('mongoose');\nconst UserSchema = require('../schema/user');\n/**\n * [Movie description] 编译生成movie模型\n * @type {[type]} 第一个参数为这个模型的名字，第二个参数为模型骨架\n */\nlet User = mongoose.model('User', UserSchema);\n\n\nUser.prototype.matchRegexp = {\n\tname: /^\\w{3,20}$/,\n\tpassword: /^.{3,20}$/,\n\temail: /^\\w+@[a-zA-Z0-9\\-]+(\\.[a-zA-Z0-9\\-]+)+$/\n}\n\n//无效用户名\nUser.prototype.USERNAME_IS_NOT_VALIDATE = Symbol();\n//用户名已经注册\nUser.prototype.USERNAME_IS_TO_BE_USED = Symbol();\n//无效密码\nUser.prototype.PASSWORD_IS_NOT_VALIDATE = Symbol();\n//两次密码不一致\nUser.prototype.TWO_PASSWORD_IS_NOT_MATCH = Symbol();\n//无效email\nUser.prototype.EMAIL_IS_NOT_VALIDATE = Symbol();\n//邮箱已经注册\nUser.prototype.EMAIL_IS_TO_BE_USED = Symbol();\n\n/**\n * 用户注册\n * @return {[type]} [description]\n */\nUser.prototype.register = function() {\n\treturn new Promise( (resolve, reject) => {\n\t\tif ( !this.verifyUserName() ) {\n\t\t\treturn reject(this.USERNAME_IS_NOT_VALIDATE);\n\t\t}\n\t\tif ( !this.verifyPassWord() ) {\n\t\t\treturn reject(this.PASSWORD_IS_NOT_VALIDATE);\n\t\t}\n\t\tif ( this.password !== this.confirmpwd) {\n\t\t\treturn reject(this.TWO_PASSWORD_IS_NOT_MATCH);\n\t\t}\n\t\tif ( !this.verifyEmail() ) {\n\t\t\treturn reject(this.EMAIL_IS_NOT_VALIDATE);\n\t\t}\n\n\t\tresolve();\n\t}).then( () => {\n\t\treturn this.getUserInfoByUserName(this.name).then( userInfo => {\n\t\t\tif (userInfo) {\n\t\t\t\treturn Promise.reject( this.USERNAME_IS_TO_BE_USED );\n\t\t\t} else {\n\t\t\t\treturn Promise.resolve();\n\t\t\t}\n\t\t});\n\t}).then( () => {\n\t\treturn this.getUserInfoByEmail(this.email).then( userInfo => {\n\t\t\tif (userInfo) {\n\t\t\t\treturn Promise.reject(this.EMAIL_IS_TO_BE_USED);\n\t\t\t} else {\n\t\t\t\treturn Promise.resolve();\n\t\t\t}\n\t\t} )\n\t} ).then( () => {\n\t\treturn this.save();\n\t} )\n}\n\nUser.prototype.resetPwd = function() {\n\treturn new Promise( (resolve, reject) => {\n\t\tif ( !this.verifyPassWord() ) {\n\t\t\treturn reject(this.PASSWORD_IS_NOT_VALIDATE);\n\t\t}\n\t\tif ( this.password !== this.confirmpwd) {\n\t\t\treturn reject(this.TWO_PASSWORD_IS_NOT_MATCH);\n\t\t}\n\t\tresolve();\n\t}).then( () => {\n\t\treturn this.save();\n\t})\n}\n/*\n* 用户登录\n* */\n// User.prototype.login = function() {\n// \treturn new Promise( (resolve, reject) => {\n// \t\tthis.type = ['name','email'].indexOf(this.type) != -1 ? this.type : 'name';\n// \t\tif (this.type == 'name') {\n// \t\t\treturn this.getUserInfoByUserName(this.account).then( userInfo => {\n// \t\t\t\tif (userInfo) {\n// \t\t\t\t\t//存在该用户\n// \t\t\t\t\tconsole.log(userInfo.password, this.password)\n// \t\t\t\t\tif (userInfo.password == this.password) {\n// \t\t\t\t\t\treturn resolve(userInfo);\n// \t\t\t\t\t} else {\n// \t\t\t\t\t\t//密码错误\n// \t\t\t\t\t\treturn reject();\n// \t\t\t\t\t}\n// \t\t\t\t} else {\n// \t\t\t\t\treturn reject();\n// \t\t\t\t}\n// \t\t\t} )\n// \t\t} else {\n// \t\t\treturn this.getUserInfoByEmail(this.account).then( userInfo => {\n// \t\t\t\tif (userInfo) {\n// \t\t\t\t\t//存在该用户\n// \t\t\t\t\tif (userInfo.password == this.password) {\n// \t\t\t\t\t\treturn resolve(userInfo);\n// \t\t\t\t\t} else {\n// \t\t\t\t\t\t//密码错误\n// \t\t\t\t\t\treturn reject();\n// \t\t\t\t\t}\n// \t\t\t\t} else {\n// \t\t\t\t\treturn reject();\n// \t\t\t\t}\n// \t\t\t} )\n// \t\t}\n// \t});\n// }\n\n/**\n * 验证用户名\n * @return {[type]} [description]\n */\nUser.prototype.verifyUserName = function() {\n\treturn this.matchRegexp.name.test(this.name);\n}\n/**\n * 验证密码\n * @return {[type]} [description]\n */\nUser.prototype.verifyPassWord = function() {\n\treturn this.matchRegexp.password.test(this.password);\n}\n/**\n * 验证邮箱\n * @return {[type]} [description]\n */\nUser.prototype.verifyEmail = function() {\n\treturn this.matchRegexp.email.test(this.email);\n}\n/**\n * 通过用户 USERNAME 获取用户信息\n * @return {[type]} [description]\n */\nUser.prototype.getUserInfoByUserName = function(name) {\n\treturn User.findOne({\n\t\tname: name\n\t}).exec();\n}\n/**\n * 通过用户 EMAIL 获取用户信息\n * @return {[type]} [description]\n */\nUser.prototype.getUserInfoByEmail = function(email) {\n\treturn User.findOne({\n\t\temail: email\n\t}).exec();\n}\n/**\n * 通过用户 uid 获取用户信息\n * @return {[type]} [description]\n */\nUser.prototype.getUserInfoById = function(uid) {\n\treturn User.findOne({\n\t\t_id: uid\n\t}).exec();\n}\n\nmodule.exports = User;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** /Users/closer/workspace/blog_tset副本/app/models/user.js\n ** module id = 20\n ** module chunks = 0\n **/","const mongoose = require('mongoose');\nconst Schema = mongoose.Schema;\nconst ObjectId = Schema.Types.ObjectId;\n//专门为密码存储设计的算法\n//先生成一个随机的盐，然后将密码和盐混合进行加密，就拿到了最终存储的密码\nconst bcrypt = require('bcrypt');\nlet SALT_WORK_FACTORY = 10;\n\nconst UserSchema = new mongoose.Schema({\n\t//一般网站保护密码最好的密码是加盐密码哈希后的值\n\t//哈希算法将任意长度的二进制值映射为较短的固定长度的二进制值，这个小的二进制值称为哈希值。\n\t//过程不可逆（md5）\n\tname: {\n\t\t//唯一\n\t\tunique: true,\n\t\ttype: String\n\t},\n\temail: {\n\t\tunique: true,\n\t\ttype: String\n\t},\n\tpassword: String,\n\tarticles: [{type: ObjectId, ref: 'Article'}],\n\tpv: String,\n\thead: String,\n\tposter: String,\n\tsignature: String,\n\tavator: String,\n\t//0:normal  1:verified 2:advance\n\t//>10: admin\n\t///>50: super admin \n\trole: {\n\t\ttype: Number,\n\t\tdefault: 0\n\t},\n\tmeta: {\n\t\tcreateTime: {\n\t\t\ttype: Date,\n\t\t\tdefault:Date.now()\n\t\t},\n\t\tupdateTime: {\n\t\t\ttype: Date,\n\t\t\tdefault:Date.now()\n\t\t}\n\t}\n})\n// //每次存储数据之前都会去调用这个方法\n// UserSchema.pre('save', function (next) {\n// \tvar user = this;\n// \t//判断数据是否是新加的\n// \tif(this.isNew) {\n// \t\tthis.meta.createTime = this.meta.update = Date.now();\n// \t} else {\n// \t\tthis.meta.updateTime = Date.now()\n// \t}\n// \t//生成一个随机的盐,接受两个参数，第一个为计算强度，第二个为cb,cb中参数可拿到生成后的salt\n// \tbcrypt.genSalt(SALT_WORK_FACTORY, function (err,salt) {\n// \t\t//如果有错误，通过next传入下个流程\n// \t\tif(err) {\n// \t\t\treturn next(err);\n// \t\t}\n// \t\t//hash接受三个参数,第三个参数拿到生成后的hash\n// \t\tbcrypt.hash(user.password, salt, function (err,hash) {\n// \t\t\tif (err) {\n// \t\t\t\treturn next(err);\n// \t\t\t}\n// \t\t\tconsole.log(\"hash:\"+hash);\n// \t\t\t//将hash保存到user.password\n// \t\t\tuser.password = hash;\n// \t\t\tconsole.log(this.password+':'+user.password);\n// \t\t\t//进入下一个流程\n// \t\t\tnext();\n// \t\t})\n// \t})\t\n// \tnext();\n// })\n// //实例方法,实例才可调用\n// UserSchema.methods = {\n\t\n//   comparePassword: function(_password, cb) {\n//   \tvar _this = this;\n//   \tbcrypt.hash(_this.password,SALT_WORK_FACTORY,function(err,hash){\n//   \t\tif (err) {\n//   \t\t\tconsole.log(err);\n//   \t\t}\n//   \t\tbcrypt.compare(_password, hash, function(err, isMatch) {\n// \t      if (err) return cb(err);\n\n// \t      cb(null, isMatch);\n//     \t})\n//   \t})\n    \n//   }\n// }\n\n//每次存储数据之前都会去调用这个方法\nUserSchema.pre('save', function(next) {\n  var user = this\n  //判断数据是否是新加的\n  if (this.isNew) {\n    this.meta.createAt = this.meta.updateAt = Date.now()\n  }\n  else {\n    this.meta.updateAt = Date.now()\n  }\n  //生成一个随机的盐,接受两个参数，第一个为计算强度，第二个为cb,cb中参数可拿到生成后的salt\n  bcrypt.genSalt(SALT_WORK_FACTORY, function(err, salt) {\n    if (err) return next(err)\n    //hash接受三个参数,第三个参数拿到生成后的hash\n    bcrypt.hash(user.password, salt, function(err, hash) {\n      if (err) return next(err)\n\n      user.password = hash\n      next()\n    })\n  })\n})\n//实例方法,实例才可调用\nUserSchema.methods = {\n  comparePassword: function(_password, cb) {\n    bcrypt.compare(_password, this.password, function(err, isMatch) {\n      if (err) return cb(err)\n\n      cb(null, isMatch)\n    })\n  }\n}\n\n// //只有进行模型编译实例化以后才能有这些方法\n// UserSchema.statics = {\n// \t//用来查找数据库里所有数据\n// \tfetch: function(cb) {\n// \t\treturn this\n// \t\t\t.find({})\n// \t\t\t.sort('meta.updateTime') //按照更新时间排序\n// \t\t\t.exec(cb) \t//执行回调方法\n// \t},\n// \t//用来查询单条数据\n// \tfindById: function(id, cb) {\n// \t\treturn this\n// \t\t\t.findOne({_id:id})\n// \t\t\t.exec(cb) \t//执行回调方法\n// \t}\n// }\nmodule.exports = UserSchema;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** /Users/closer/workspace/blog_tset副本/app/schema/user.js\n ** module id = 21\n ** module chunks = 0\n **/","module.exports = require(\"bcrypt\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"bcrypt\"\n ** module id = 22\n ** module chunks = 0\n **/","const mongoose = require('mongoose');\nconst TagSchema = require('../schema/tag');\n/**\n * [Movie description] 编译生成movie模型\n * @type {[type]} 第一个参数为这个模型的名字，第二个参数为模型骨架\n */\nconst Tag = mongoose.model('Tag', TagSchema);\n\nmodule.exports = Tag;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** /Users/closer/workspace/blog_tset副本/app/models/tag.js\n ** module id = 23\n ** module chunks = 0\n **/","const mongoose = require('mongoose');\nconst Schema = mongoose.Schema;\nconst ObjectId = Schema.Types.ObjectId;\n\nconst TagSchema = new mongoose.Schema({\n\tname: {\n\t\t//唯一\n\t\tunique: true,\n\t\ttype: String\n\t},\n\tarticles: [{type: ObjectId, ref: 'Article'}],\n\tmeta: {\n\t\tcreateTime: {\n\t\t\ttype: Date,\n\t\t\tdefault:Date.now()\n\t\t},\n\t\tupdateTime: {\n\t\t\ttype: Date,\n\t\t\tdefault:Date.now()\n\t\t}\n\t}\n})\n\nTagSchema.pre('save', function (next) {\n\t//判断数据是否是新加的\n\tif(this.isNew) {\n\t\tthis.meta.createTime = this.meta.update = Date.now();\n\t} else {\n\t\tthis.meta,updateTime = Date.now()\n\t}\n\n\tnext();\n})\n\n// ArticleSchema.statics = {\n// \t//用来查找数据库里所有数据\n// \tfetch: function(cb) {\n// \t\treturn this\n// \t\t\t.find({})\n// \t\t\t.sort('meta.updateTime') //按照更新时间排序\n// \t\t\t.exec(cb) \t//执行回调方法\n// \t},\n// \t//用来查询单条数据\n// \tfindById: function(id, cb) {\n// \t\treturn this\n// \t\t\t.findOne({_id:id})\n// \t\t\t.exec(cb) \t//执行回调方法\n// \t}\n// }\n\nmodule.exports = TagSchema;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** /Users/closer/workspace/blog_tset副本/app/schema/tag.js\n ** module id = 24\n ** module chunks = 0\n **/","module.exports = require(\"marked\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"marked\"\n ** module id = 25\n ** module chunks = 0\n **/","const express = require('express'),\n\t\t\trouter = express.Router();\n\nrouter.get('/login', (req, res, next) => {\n\tres.render('login', {\n\t\ttitle: '登录',\n\t\tmessage: false,\n\t\tuser: req.session.user\n\t})\n})\n\nrouter.get('/reg', (req, res, next) => {\n\tres.render('register',{\n\t\ttitle: '注册',\n\t\tmessage: false\n\t})\n})\n\nmodule.exports = router;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** /Users/closer/workspace/blog_tset副本/app/controller/main/user.js\n ** module id = 26\n ** module chunks = 0\n **/","\nconst express = require('express');\nconst adminApp = express();\nconst path = require('path');\n\t\t\n\nlet admin = (app) => {\n\n\tadminApp.set('views', path.join(__dirname, '../app/views/admin'));\n\tadminApp.set('view engine', 'ejs');\n\n\tadminApp.use( (req, res, next) => {\n\t  let _user = req.session.user;\n\t  adminApp.locals.user = _user;\n\t  next();\n\t})\n\t\n\tadminApp.use( (req, res, next) => {\n\t\tlet user = req.session.user;\n\t\tif (!user) {\n\t\t\treturn res.redirect('/user/login')\n\t\t}\n\t\tnext();\n\t} )\n\n\t//路由模块\n\tconst routers = {\n\t\tarticle: require('../app/controller/admin/article'),\n\t\tuser: require('../app/controller/admin/user')\n\t};\n\n\tadminApp.use( '/article', routers.article );\n\tadminApp.use( '/user', routers.user);\n\n\n\treturn adminApp;\n\n}\n\nmodule.exports = admin;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** /Users/closer/workspace/blog_tset副本/configs/admin.js\n ** module id = 27\n ** module chunks = 0\n **/","'use strict';\n\nconst express = require('express');\nconst router = express.Router();\nconst Article = require('../../models/article');\n\n/**\n * 首页\n */\nrouter.get('/post', (req, res, next) => {\n\tres.render('post',{\n\t\ttitle: '发表文章',\n\t\tarticle: {}\n\t})\n})\n\n\nrouter.get('author/:id', (req, res, next) => {\n\tlet id = req.params.id;\n\tif (req.session.user._id !== id && req.session.user.role < 50) {\n\t\treturn res.redirect('back');\n\t};\n\tArticle\n\t.find({author: id})\n\t.sort({'meta.createTime':-1})\n\t.populate('author')\n\t.populate('tag')\n\t.exec((err, articles) => {\n\t\tif (err) {\n\t\t\tconsole.log(err);\n\t\t\treturn res.redirect('/');\n\t\t}\n\t\tres.render('articlelist', {\n\t\t\ttitle: '文章列表',\n\t\t\tarticles: articles\n\t\t})\n\t})\n})\n\nrouter.get('/edit/:id', (req, res, next) => {\n\tlet id = req.params.id;\n\tif (id) {\n\t\tArticle\n\t\t.findById({_id: id})\n\t\t.populate('tag')\n\t\t.exec((err, article)=> {\n\t\t\tif (req.session.user._Id !== article.user && req.session.user.role < 50) {\n\t\t\t\treturn res.redirect('back');\n\t\t\t};\n\t\t\tres.render('post',{\n\t\t\t\ttitle: '发表文章',\n\t\t\t\tarticle: article\n\t\t\t})\n\t\t})\n\t}\n})\n\nmodule.exports = router;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** /Users/closer/workspace/blog_tset副本/app/controller/admin/article.js\n ** module id = 28\n ** module chunks = 0\n **/","\nconst User = require('../../models/user');\nconst express = require('express');\nconst router = express.Router();\n\n\nrouter.get('/setprofile', (req, res, next) => {\n\tUser\n\t.findOne({_id: req.session.user})\n\t.exec((err, user) => {\n\t\tres.render('setprofile', {\n\t\t\ttitle: '管理',\n\t\t\tUser: user\n\t\t})\n\t})\n})\n\n\nrouter.get('/setavator', (req, res) => {\n\tUser\n\t.findOne({_id: req.session.user})\n\t.exec((err, user) => {\n\t\tres.render('setavator', {\n\t\t\ttitle: '管理',\n\t\t\tUser: user\n\t\t})\n\t})\n})\n\nrouter.get('/resetpwd', (req, res) => {\n\tUser\n\t.findOne({_id: req.session.user})\n\t.exec((err, user) => {\n\t\tres.render('password', {\n\t\t\ttitle: '管理',\n\t\t\tUser: user,\n\t\t\tmessage:false\n\t\t})\n\t})\n})\n\n\nmodule.exports = router;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** /Users/closer/workspace/blog_tset副本/app/controller/admin/user.js\n ** module id = 29\n ** module chunks = 0\n **/","\nconst express = require('express');\nconst apiApp = express();\nconst path = require('path');\n\t\t\n\nlet api = (app) => {\n\t\n\tapiApp.set('views', path.join(__dirname, '../app/views/main'));\n\tapiApp.set('view engine', 'ejs');\n\n\n\tapiApp.use( (req, res, next) => {\n\t  let _user = req.session.user;\n\t  apiApp.locals.user = _user;\n\t  next();\n\t})\n\t//路由模块\n\tconst routers = {\n\t\tmain: require('../app/controller/api/main'),\n\t\tuser: require('../app/controller/api/user'),\n\t\tshowmore: require('../app/controller/api/showmore')\n\t};\n\t//主模块\n\tapiApp.use( '/', routers.main );\n\t//用户模块\n\tapiApp.use('/user', routers.user);\n\n\tapiApp.use('/showmore', routers.showmore);\n\n\treturn apiApp;\n}\n\nmodule.exports = api;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** /Users/closer/workspace/blog_tset副本/configs/api.js\n ** module id = 30\n ** module chunks = 0\n **/","const express = require('express'),\n\t\t\trouter = express.Router(),\n\t\t\tArticle = require('../../models/article'),\n\t\t\tUser = require('../../models/user'),\n\t\t\tTag = require('../../models/tag'),\n\t\t\tmarked = require('marked'),\n\t\t\t_ = require('underscore'),\n\t\t\tmulter  = require('multer'),\n\t\t\tfs = require('fs'),\n\t\t\tPath = require('path');\n\n\nlet storage = multer.diskStorage({\n    destination: function (req, file, cb) {\n        cb(null, './public/images')\n    },\n    filename: function (req, file, cb) {\n        console.log(file.originalname);\n        let ext = file.originalname.substring( file.originalname.lastIndexOf('.') );\n        cb(null, Date.now() + ext);\n    }\n})\n\nlet upload = multer({ storage: storage });\nupload = upload.single('f');\n\n\n\n\nrouter.post('/post', (req, res, next) => {\n\tlet articleObj = req.body.article,\n\t\t\t_title = articleObj.title,\n\t\t\t_text = articleObj.text,\n\t\t\t_tag = articleObj.tag,\n\t\t\t_id = articleObj._id,\n\t\t\tcurrentUser = req.session.user,\n\t\t\t_article;\n\t//文章存在即修改文章\n\tif (_id) {\n\t\t//标签名唯一，所以用名字查找\n\t\tTag.findOne({name: _tag}, (err, tag) => {\n\t\t\t//已经有标签\n\t\t\tif (tag) {\n\t\t\t\tArticle.findById({_id: _id}).then((article) => {\n\t\t\t\t\t//判断更新的标签名是否与文章原本标签一致\n\t\t\t\t\tif (article.tag.toString() == tag._id) {\n\t\t\t\t\t\tarticleObj.tag = article.tag;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//不相同则修改文章tag对象并且在Tag中修改\n\t\t\t\t\t\tarticleObj.tag = tag._id;\n\t\t\t\t\t\tTag.findOne({_id: article.tag}).then((tag) => {\n\t\t\t\t\t\t\t//tag不存在则删除旧的tag中这篇文章id\n\t\t\t\t\t\t\tfor(let i = 0; i < tag.articles.length; i++ ) {\n\t\t\t\t\t\t\t\tif (tag.articles[i].toString() == article._id) {\n\t\t\t\t\t\t\t\t\ttag.articles.splice(i,1);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!tag.articles.length) {\n\t\t\t\t\t\t\t\tTag.remove({_id: tag._id},(err, tag) => {\n\t\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\t\tconsole.log(err);\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttag.save((err, _tag) => {\n\t\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\t\tconsole.log(err);\n\t\t\t\t\t\t\t\t\t\treturn res.redirect('/admin/article/post');\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\t\t\n\t\t\t\t\t\t}).then(() => {\n\t\t\t\t\t\t\tTag.findById({_id: tag._id}).then((tag) => {\n\t\t\t\t\t\t\t\ttag.articles.push(article._id);\n\t\t\t\t\t\t\t\ttag.save((err, _tag) => {\n\t\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\t\tconsole.log(err);\n\t\t\t\t\t\t\t\t\t\treturn res.redirect('/admin/article/post');\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\t//underscore里extend方法，另外一个对象新的字段替换掉老的对象的字段\n\t\t\t\t\t_article = _.extend(article, articleObj);\n\t\t\t\t\t_article.save((err, article) => {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\tconsole.log(err);\n\t\t\t\t\t\t\treturn res.redirect('/admin/article/post');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tres.redirect('/article/' + article._id);\n\t\t\t\t\t})\n\t\t\t\t}) \n\t\t\t} else {\n\t\t\t\t\tlet tagname = _tag;\n\t\t\t\t\t//找到文章\n\t\t\t\t\tArticle.findById({_id: _id}).then((article) => {\n\t\t\t\t\t\t//找到标签并移除里面存储的文章\n\t\t\t\t\t\tTag.findOne({_id: article.tag}).then((tag) => {\n\t\t\t\t\t\t\t//tag不存在则删除旧的tag中这篇文章id\n\t\t\t\t\t\t\tfor(let i = 0; i < tag.articles.length; i++ ) {\n\t\t\t\t\t\t\t\tif (tag.articles[i].toString() == article._id) {\n\t\t\t\t\t\t\t\t\ttag.articles.splice(i,1);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!tag.articles.length) {\n\t\t\t\t\t\t\t\tTag.remove({_id: article.tag},(err, tag) => {\n\t\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\t\tconsole.log(err);\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttag.save((err, _tag) => {\n\t\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\t\tconsole.log(err);\n\t\t\t\t\t\t\t\t\t\treturn res.redirect('/admin/article/post');\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}).then(() => {\n\t\t\t\t\t\t\tArticle.findById({_id: _id}).then((article) => {\n\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\tconsole.log(err);\n\t\t\t\t\t\t\t\t\treturn res.redirect('/admin/article/post');\n\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t//创建新tag，保存文章id\t\t\t\n\t\t\t\t\t\t\t\tlet _tag = new Tag({name: tagname});\n\t\t\t\t\t\t\t\t_tag.articles.push(_id);\n\t\t\t\t\t\t\t\tarticleObj.tag = _tag._id;\n\t\t\t\t\t\t\t\t//underscore里extend方法，另外一个对象新的字段替换掉老的对象的字段\n\t\t\t\t\t\t\t\t_article = _.extend(article, articleObj);\t\t\n\t\t\t\t\t\t\t\t_tag.save((err, _tag) => {\n\t\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\t\tconsole.log(err);\n\t\t\t\t\t\t\t\t\t\treturn res.redirect('/admin/article/post');\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t_article.save((err, article) => {\n\t\t\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\t\t\tconsole.log(err);\n\t\t\t\t\t\t\t\t\t\t\treturn res.redirect('/admin/article/post');\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\treturn res.redirect('/article/' + article._id);\n\t\t\t\t\t\t\t\t\t\tconsole.log('181');\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t} else {\n\t\tconsole.log('197');\n\t\t//在查找里面_tag会被改变因此要在这边赋值？？？？？\n\t\tlet tagname = _tag;\n\t\tTag.findOne({name: _tag}, (err, tag) => {\n\t\t\tconsole.log('201');\n\t\t\tif (err) {\n\t\t\t\tconsole.log(err);\n\t\t\t};\n\t\t\tif (!tag) {\n\t\t\t\tlet _tag = new Tag({name: tagname});\n\t\t\t\tlet\t_article = new Article({author:currentUser, title:_title, text:_text, tag:_tag._id});\n\t\t\t\t_tag.articles.push(_article._id);\n\t\t\t\t_tag.save((err, tag) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tconsole.log(err);\n\t\t\t\t\t\treturn res.redirect('/admin/article/post');\n\t\t\t\t\t}\n\t\t\t\t\t//存储article\n\t\t\t\t\t_article.save((err, article) => {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\tconsole.log(err);\n\t\t\t\t\t\t\treturn res.redirect('/admin/article/post');\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//找到当前用户并在其实例中的articles属性中添加发表的文章id并存储\n\t\t\t\t\t\tUser.findById(currentUser, (err, user) => {\n\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\tconsole.log(err);\n\t\t\t\t\t\t\t\treturn res.redirect('/admin/article/post');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tuser.articles.push(article._id);\n\t\t\t\t\t\t\tuser.save((err, user) => {\n\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\tconsole.log(err);\n\t\t\t\t\t\t\t\t\treturn res.redirect('/admin/article/post');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tres.redirect('/article/' + article._id);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\tlet\t_article = new Article({author:currentUser, title:_title, text:_text, tag:tag._id});\n\t\t\t\ttag.articles.push(_article._id);\n\t\t\t\ttag.save((err, tag) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tconsole.log(err);\n\t\t\t\t\t\treturn res.redirect('/admin/article/post');\n\t\t\t\t\t}\n\t\t\t\t//存储article\n\t\t\t\t\t_article.save((err, article) => {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\tconsole.log(err);\n\t\t\t\t\t\t\treturn res.redirect('/admin/article/post');\n\t\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\t\t//找到当前用户并在其实例中的articles属性中添加发表的文章id并存储\n\t\t\t\t\t\tUser.findById(currentUser, (err, user) => {\n\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\tconsole.log(err);\n\t\t\t\t\t\t\t\treturn res.redirect('/admin/article/post');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tuser.articles.push(article._id);\n\t\t\t\t\t\t\tuser.save((err, user) => {\n\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\tconsole.log(err);\n\t\t\t\t\t\t\t\t\treturn res.redirect('/admin/article/post');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tres.redirect('/article/' + article._id);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t}\n\t\t})\t\t\n\t}\n})\n\nrouter.post('/signature', (req, res, next) => {\n\tlet _user = req.body.user,\n\t\t\t_name = _user.name,\n\t\t\t_signature = _user.signature;\n\tUser\n\t.findOne({_id: req.session.user})\n\t.exec((err, user) => {\n\t\tuser.name = _name;\n\t\tif(_signature) {\n\t\t\tuser.signature = _signature;\n\t\t}\n\t\tuser.save((err, user) => {\n\t\t\tif (err) {\n\t\t\t\tconsole.log(err);\n\t\t\t}\n\t\t\treq.session.user = user;\n\t\t\tres.redirect('/');\n\t\t})\n\t})\n})\n\n\nrouter.post('/avator', (req, res, next) => {\n\tupload(req, res, (err) => {\n\t\tUser\n\t\t.findOne({_id: req.session.user}) \n\t\t.exec((err, user) => {\n\t\t\tif (user.avator) {\n\t\t\t\tlet preavator = user.avator;\n\t\t\t\tfs.unlinkSync(Path.join(__dirname, '../../public/images/'+preavator));\n\t\t\t}\n\t\t\tuser.avator = req.file.filename;\n\t\t\tuser.save((err, user) => {\n\t\t\t\tif (err) {\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t}\n\t\t\t\treq.session.user = user;\n\t\t\t\tlet path = req.file.path.substring(req.file.path.indexOf('/'))\n\t\t\t\tres.json({\n\t        errorCode : 0,\n\t        message: '上传成功',\n\t        path: path\n\t    \t})\n\t\t\t})\n\t\t})\n\t})\n})\n\nrouter.post('/pwd', (req, res, next) => {\n\tlet _user = req.body.user,\n\t\t\t_password = _user.password,\n\t\t\t_newpwd = _user.newpwd,\n\t\t\t_confirmpwd = _user.confirmpwd;\n\tUser.findOne({_id: req.session.user}, (err, user) => {\n\t\tuser.comparePassword(_password, (err, isMatch) => {\n\t\t\tif (err) {\n\t\t\t\treturn res.redirect('/admin/user/resetpwd');\n\t\t\t}\n\t\t\tif(isMatch) {\n\t\t\t\tuser.password = _newpwd;\n\t\t\t\tuser.confirmpwd = _confirmpwd;\n\t\t\t\tuser.resetPwd().then(function() {\n\t\t\t\t\tres.render('../admin/password', {\n\t\t\t\t\t\ttitle: '管理',\n\t\t\t\t\t\tmessage: '修改成功'\n\t\t\t\t\t});\n\t\t\t\t}).catch( (err) => {\n\t\t\t\t\tlet errorMessage = '';\n\t\t\t\t\t\tswitch( err ) {\n\t\t\t\t\t\t\tcase user.PASSWORD_IS_NOT_VALIDATE:\n\t\t\t\t\t\t\t//console.log('密码格式不正确');\n\t\t\t\t\t\t\terrorMessage = '密码格式不正确';\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tcase user.TWO_PASSWORD_IS_NOT_MATCH:\n\t\t\t\t\t\t\t//console.log('两次输入的密码不一致');\n\t\t\t\t\t\t\terrorMessage = '两次输入的密码不一致';\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t//console.log('发生了一点意外');\n\t\t\t\t\t\t\terrorMessage = '发生了一点意外';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tres.render('../admin/password', {\n\t\t\t\t\t\t\ttitle: '管理',\n\t\t\t\t\t\t\tmessage: errorMessage\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t} else {\n\t\t\t\tres.render('../admin/password',{\n\t\t\t\t\ttitle: '个人中心',\n\t\t\t\t\tmessage: '密码错误'\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t})\n})\n\nrouter.delete('deart', (req, res, next) => {\n\tlet id = req.query.id;\n    if(id) {\n    \tArticle.findById({_id: id}).then((article) => {\n    \t\tUser.findById({_id: article.author}, (err, user) => {\n    \t\t\tif (req.session.user._Id !== user._id && req.session.user.role < 50) {\n\t\t\t    \treturn res.redirect('back');\n\t\t\t    };\n    \t\t\tfor(let i = 0; i < user.articles.length; i++) {\n    \t\t\t\tif (user.articles[i].toString() == article._id) {\n    \t\t\t\t\tuser.articles.splice(i,1);\n    \t\t\t\t\tbreak;\n    \t\t\t\t}\n    \t\t\t}\n    \t\t\tuser.save((err, user) => {\n    \t\t\t\tif (err) {\n    \t\t\t\t\tconsole.log(err);\n    \t\t\t\t};\n    \t\t\t})\n    \t\t})\n    \t\treturn article;\n    \t}).then((article) => {\n    \t\tconsole.log('330');\n    \t\tconsole.log(article);\n    \t\tTag.findById({_id: article.tag}, (err, tag) => {\n    \t\t\tfor(let i = 0; i < tag.articles.length; i++) {\n    \t\t\t\tif (tag.articles[i].toString() == article._id) {\n    \t\t\t\t\ttag.articles.splice(i,1);\n    \t\t\t\t\tbreak;\n    \t\t\t\t}\n    \t\t\t}\n    \t\t\tif (!tag.articles.length) {\n    \t\t\t\tTag.remove({_id: tag._id}, (err, tag) => {\n    \t\t\t\t\tif (err) {\n    \t\t\t\t\t\tconsole.log(err);\n    \t\t\t\t\t};\n    \t\t\t\t})\n    \t\t\t} else {\n    \t\t\t\ttag.save((err, user) => {\n\t    \t\t\t\tif (err) {\n\t    \t\t\t\t\tconsole.log(err);\n\t    \t\t\t\t};\n\t    \t\t\t})\n    \t\t\t}\n    \t\t})\n    \t}).then(() => {\n    \t\tArticle.remove({_id:id}, (err,article) => {\n        \tif(err) {\n        \t\tconsole.log(err);\n        \t} else {\n        \t\tres.json({success: 1});\n        \t}\n        })\n    \t})   \n    }\n})\n\nmodule.exports = router;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** /Users/closer/workspace/blog_tset副本/app/controller/api/main.js\n ** module id = 31\n ** module chunks = 0\n **/","module.exports = require(\"underscore\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"underscore\"\n ** module id = 32\n ** module chunks = 0\n **/","module.exports = require(\"multer\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"multer\"\n ** module id = 33\n ** module chunks = 0\n **/","module.exports = require(\"fs\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"fs\"\n ** module id = 34\n ** module chunks = 0\n **/","const express = require('express'),\n\t\t\trouter = express.Router(),\n\t\t\tArticle = require('../../models/article'),\n\t\t\tUser = require('../../models/user'),\n\t\t\tTag = require('../../models/tag'),\n\t\t\tmarked = require('marked'),\n\t\t\t_ = require('underscore');\n\n\nrouter.post('/reg', (req, res, next) => {\n\tlet user = new User();\n\tlet _user = req.body.user;\n\tuser.name = _user.name;\n\tuser.password = _user.password;\n\tuser.email = _user.email;\n\tuser.confirmpwd = _user.confirmpwd;\n\tuser.head = \"http://7xsn9b.com1.z0.glb.clouddn.com/\" + Math.ceil(7 * Math.random()) + \".jpg\";\n\tuser.register().then(function() {\n\t\treq.session.user = user;\n\t\tres.redirect('/');\n\t}).catch(function(err) {\n\t\tlet errorMessage = '';\n\t\tswitch( err ) {\n\t\t\tcase user.USERNAME_IS_NOT_VALIDATE:\n\t\t\t//console.log('用户名格式不正确');\n\t\t\terrorMessage = '用户名格式不正确';\n\t\t\tbreak;\n\n\t\t\tcase user.PASSWORD_IS_NOT_VALIDATE:\n\t\t\t//console.log('密码格式不正确');\n\t\t\terrorMessage = '密码格式不正确';\n\t\t\tbreak\n\n\t\t\tcase user.TWO_PASSWORD_IS_NOT_MATCH:\n\t\t\t//console.log('两次输入的密码不一致');\n\t\t\terrorMessage = '两次输入的密码不一致';\n\t\t\tbreak\n\n\t\t\tcase user.EMAIL_IS_NOT_VALIDATE:\n\t\t\t//console.log('邮箱格式不正确');\n\t\t\terrorMessage = '邮箱格式不正确';\n\t\t\tbreak\n\n\t\t\tcase user.USERNAME_IS_TO_BE_USED:\n\t\t\t//console.log('用户名已经被注册了');\n\t\t\terrorMessage = '用户名已经被注册了';\n\t\t\tbreak\n\n\t\t\tcase user.EMAIL_IS_TO_BE_USED:\n\t\t\t//console.log('邮箱已经被注册了');\n\t\t\terrorMessage = '邮箱已经被注册了';\n\t\t\tbreak\n\n\t\t\tdefault:\n\t\t\t//console.log('发生了一点意外');\n\t\t\terrorMessage = '发生了一点意外';\n\t\t\tbreak;\n\t\t}\n\t\tconsole.log('wocao+'+errorMessage);\n\t\tres.render('register', {\n\t\t\ttitle: '注册',\n\t\t\tmessage: errorMessage\n\t\t})\n\t})\n})\n\nrouter.post('/login', (req, res, next) => {\n\tlet _user = req.body.user,\n\t\t\t_name = _user.name,\n\t\t\t_password = _user.password;\n\tUser.findOne({name: _name}, (err, user) => {\n\t\tif (err) {\n\t\t\tconsole.log(err);\n\t\t\treturn res.redirect('/user/login');\n\t\t} \n\t\tif (!user) {\n\t\t\treturn res.render('login',{\n\t\t\t\ttitle: '登录',\n\t\t\t\tmessage: '用户不存在'\n\t\t\t})\n\t\t}\n\t\tuser.comparePassword(_password, (err, isMatch) => {\n\t\t\tif (err) {\n\t\t\t\tconsole.log(err);\n\t\t\t\treturn res.redirect('/user/login');\n\t\t\t}\n\t\t\tif(isMatch) {\n\t\t\t\treq.session.user = user;\n\t\t\t\treturn res.redirect('/');\n\t\t\t} else {\n\t\t\t\tres.render('login',{\n\t\t\t\t\ttitle: '登录',\n\t\t\t\t\tmessage: '密码错误'\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t})\n})\n\nrouter.get('/logout', (req, res, next) => {\n\treq.session.user = null;\n\tres.redirect('/');\n})\n\n//-----------------------------------------ajax---------------------------------------\nrouter.get('/checkUserName', (req, res, next) => {\n\tlet username = req.query.username;\n\tconsole.log(username);\n\tconsole.log(222222);\n\tlet user = new User();\n\tconsole.log(user);\n\tuser.name = username;\n\tif ( !user.verifyUserName() ) {\n\t\tres.json({\n\t\t\terrorCode : 1,\n\t\t\tmessage: '用户名格式不正确'\n\t\t});\n\t}\n\tuser.getUserInfoByUserName(username).then(function(userInfo) {\n\t\tif (userInfo) {\n\t\t\tres.json({\n\t\t\t\terrorCode : 2,\n\t\t\t\tmessage: '用户名已经被注册了'\n\t\t\t});\n\t\t} else {\n\t\t\tres.json({\n\t\t\t\terrorCode : 0,\n\t\t\t\tmessage: '用户名可以注册'\n\t\t\t});\n\t\t}\n\t}).catch(function(err) {\n\t\tres.json({\n\t\t\terrorCode : 3,\n\t\t\tmessage: err\n\t\t});\n\t})\n})\n\nrouter.get('/checkEmail', (req, res, next) => {\n\tlet email = req.query.email;\n\n\tlet user = new User();\n\tuser.email = email;\n\tif ( !user.verifyEmail() ) {\n\t\tres.json({\n\t\t\terrorCode : 1,\n\t\t\tmessage: '邮箱格式不正确'\n\t\t});\n\t}\n\tuser.getUserInfoByEmail(email).then(function(userInfo) {\n\t\tif (userInfo) {\n\t\t\tres.json({\n\t\t\t\terrorCode : 2,\n\t\t\t\tmessage: '邮箱已经被注册了'\n\t\t\t});\n\t\t} else {\n\t\t\tres.json({\n\t\t\t\terrorCode : 0,\n\t\t\t\tmessage: '邮箱可以注册'\n\t\t\t});\n\t\t}\n\t}).catch(function(err) {\n\t\tres.json({\n\t\t\terrorCode : 3,\n\t\t\tmessage: err\n\t\t});\n\t})\n})\n\n\nmodule.exports = router;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** /Users/closer/workspace/blog_tset副本/app/controller/api/user.js\n ** module id = 35\n ** module chunks = 0\n **/","const express = require('express');\nconst router = express.Router();\nconst Article = require('../../models/article');\nconst Tag = require('../../models/tag');\nconst User = require('../../models/user');\nconst marked = require('marked');\n\nlet re = /<[^>]*>/g;\n\nrouter.get('/index', (req, res, next) => {\n\tlet page = parseInt(req.query.p, 10) || 1,\n\tlen,\n\ttime;\n\tconst count = 6;\n\tlet index = count * page;\n\tArticle\n\t.find({})\n\t.sort({'meta.createTime':-1})\n\t.populate('author')\n\t.populate('tag')\n\t.exec((err, articles) => {\n\t\tlen = articles.length;\n\t\tarticles = articles.slice(index, index+count);\n\t\tarticles.forEach((article,index) => {\n\t\t\tarticle.text = marked(article.text);\n\t\t\tarticle.text = article.text.replace(re,'');\n\t\t\tif (article.text.length > 300) {\n\t\t\t\tarticle.text = article.text.substring(0,300);\n\t\t\t\tarticle.text = article.text + ' ...';\n\t\t\t}\n\t\t})\n\t\tres.json({articles:articles,showmore:{page:page,len:len,count:count}});\n\t})\n})\n\nrouter.get('/author', (req, res, next) => {\n\tlet id = req.query.id;\n\tlet page = parseInt(req.query.p, 10) || 1,\n\tlen;\n\tconst count = 6;\n\tlet index = count * page;\n\tUser\n\t\t.findById({_id: id})\n\t\t.populate('articles')\n\t\t.exec((err, user) => {\n\t\t\tif (err) {\n\t\t\t\tconsole.log(err);\n\t\t\t\treturn res.redirect('/');\n\t\t\t}\n\t\t\tlen = user.articles.length;\n\t\t\tuser.articles.sort((a,b)=> {\n\t\t\t\treturn b.meta.createTime-a.meta.createTime;\n\t\t\t})\n\n\t\t\tarticles = user.articles.slice(index,index+count);\n\t\t\tarticles.forEach((article,index) => {\n\t\t\t\tarticle.text = marked(article.text);\n\t\t\t\tarticle.text = article.text.replace(re,'');\n\t\t\t\tif (article.text.length > 300) {\n\t\t\t\t\tarticle.text = article.text.substring(0,300);\n\t\t\t\t\tarticle.text = article.text + ' ...';\n\t\t\t\t}\n\t\t\t})\n\t\t\tarticles.forEach((article) => {\n\t\t\t\tarticle.author.name = user.name;\n\t\t\t})\n\t\t\tres.json({articles:articles, name:user.name, showmore:{page:page,len:len,count:count}});\n\t\t})\n})\n\nrouter.get('/tag', (req, res, next) => {\n\tlet id = req.query.id,\n\t\t\tpage = parseInt(req.query.p, 10) || 1,\n\t    len;\n\tconst count = 6;\n\tlet index = count * page;\n\tTag\n\t.findById({_id: id})\n\t.populate('articles')\n\t.exec((err, tag) => {\n\t\tif (err) {\n\t\t\tconsole.log(err);\n\t\t};\n\t\tlen = tag.articles.length;\n\t\ttag.articles = tag.articles.slice(index,index+count);\n\t\tres.json({articles:tag.articles,showmore:{page:page,len:len,count:count}});\n\t})\n})\n\nrouter.get('/results', (req, res, next) => {\n\tlet q = req.query.q,\n\t\t\tpage = parseInt(req.query.p, 10) || 1,\n\t    len;\n\tconst count = 6;\n\tlet index = count * page;\n\tArticle.count((err, count) => {\n  \tif (err) {\n  \t\tconsole.log(err);\n  \t};\n  \tlen = count;\n  });\n\tArticle\n\t.find({title: new RegExp(q + '.*', 'i')})\n\t.limit(count)\n\t.skip(index)\n\t.exec((err, articles) => {\n\t\tif (err) {\n\t\t\tconsole.log(err);\n\t\t\treturn res.redirect('/');\n\t\t}\n\t\tarticles.forEach((article,index) => {\n\t\t\tarticle.text = marked(article.text);\n\t\t\tarticle.text = article.text.replace(re,'');\n\t\t\tif (article.text.length > 300) {\n\t\t\t\tarticle.text = article.text.substring(0,300);\n\t\t\t\tarticle.text = article.text + ' ...';\n\t\t\t}\n\t\t})\n\t\tres.json({articles:articles,showmore:{page:page,len:len,count:count}});\n\t})\n})\n\n\nmodule.exports = router;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** /Users/closer/workspace/blog_tset副本/app/controller/api/showmore.js\n ** module id = 36\n ** module chunks = 0\n **/","\nconst express = require('express');\nconst managerApp = express();\nconst path = require('path');\n\t\t\n\nlet manager = (app) => {\n\n\tmanagerApp.set('views', path.join(__dirname, '../app/views/manager'));\n\tmanagerApp.set('view engine', 'ejs');\n\n\tmanagerApp.use( (req, res, next) => {\n\t  let _user = req.session.user;\n\t  managerApp.locals.user = _user;\n\t  next();\n\t})\n\n\tmanagerApp.use( (req, res, next) => {\n\t\tlet user = req.session.user;\n\t\t\tif (user && user.role > 50) {\n\t\t\t\tnext();\n\t\t\t} else {\n\t\t\t\treturn res.redirect('back');\n\t\t\t}\n\t\t\n\t})\n\n\t//路由模块\n\tconst routers = {\n\t\tmain: require('../app/controller/manager/main')\n\t};\n\n\tmanagerApp.use( '/', routers.main );\n\n\n\treturn managerApp;\n\n}\n\nmodule.exports = manager;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** /Users/closer/workspace/blog_tset副本/configs/manager.js\n ** module id = 37\n ** module chunks = 0\n **/","const express = require('express');\nconst router = express.Router();\nconst User = require('../../models/User');\n\n\nrouter.get('/', (req, res, next) => {\n\tUser\n\t.find({})\n\t.exec((err, users) => {\n\t\tres.render('config', {\n\t\t\ttitle: '管理中心',\n\t\t\tusers: users\n\t\t})\n\t})\n})\n\n\n\nmodule.exports = router;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** /Users/closer/workspace/blog_tset副本/app/controller/manager/main.js\n ** module id = 38\n ** module chunks = 0\n **/","const mongoose = require('mongoose');\nconst UserSchema = require('../schema/user');\n/**\n * [Movie description] 编译生成movie模型\n * @type {[type]} 第一个参数为这个模型的名字，第二个参数为模型骨架\n */\nlet User = mongoose.model('User', UserSchema);\n\n\nUser.prototype.matchRegexp = {\n\tname: /^\\w{3,20}$/,\n\tpassword: /^.{3,20}$/,\n\temail: /^\\w+@[a-zA-Z0-9\\-]+(\\.[a-zA-Z0-9\\-]+)+$/\n}\n\n//无效用户名\nUser.prototype.USERNAME_IS_NOT_VALIDATE = Symbol();\n//用户名已经注册\nUser.prototype.USERNAME_IS_TO_BE_USED = Symbol();\n//无效密码\nUser.prototype.PASSWORD_IS_NOT_VALIDATE = Symbol();\n//两次密码不一致\nUser.prototype.TWO_PASSWORD_IS_NOT_MATCH = Symbol();\n//无效email\nUser.prototype.EMAIL_IS_NOT_VALIDATE = Symbol();\n//邮箱已经注册\nUser.prototype.EMAIL_IS_TO_BE_USED = Symbol();\n\n/**\n * 用户注册\n * @return {[type]} [description]\n */\nUser.prototype.register = function() {\n\treturn new Promise( (resolve, reject) => {\n\t\tif ( !this.verifyUserName() ) {\n\t\t\treturn reject(this.USERNAME_IS_NOT_VALIDATE);\n\t\t}\n\t\tif ( !this.verifyPassWord() ) {\n\t\t\treturn reject(this.PASSWORD_IS_NOT_VALIDATE);\n\t\t}\n\t\tif ( this.password !== this.confirmpwd) {\n\t\t\treturn reject(this.TWO_PASSWORD_IS_NOT_MATCH);\n\t\t}\n\t\tif ( !this.verifyEmail() ) {\n\t\t\treturn reject(this.EMAIL_IS_NOT_VALIDATE);\n\t\t}\n\n\t\tresolve();\n\t}).then( () => {\n\t\treturn this.getUserInfoByUserName(this.name).then( userInfo => {\n\t\t\tif (userInfo) {\n\t\t\t\treturn Promise.reject( this.USERNAME_IS_TO_BE_USED );\n\t\t\t} else {\n\t\t\t\treturn Promise.resolve();\n\t\t\t}\n\t\t});\n\t}).then( () => {\n\t\treturn this.getUserInfoByEmail(this.email).then( userInfo => {\n\t\t\tif (userInfo) {\n\t\t\t\treturn Promise.reject(this.EMAIL_IS_TO_BE_USED);\n\t\t\t} else {\n\t\t\t\treturn Promise.resolve();\n\t\t\t}\n\t\t} )\n\t} ).then( () => {\n\t\treturn this.save();\n\t} )\n}\n\nUser.prototype.resetPwd = function() {\n\treturn new Promise( (resolve, reject) => {\n\t\tif ( !this.verifyPassWord() ) {\n\t\t\treturn reject(this.PASSWORD_IS_NOT_VALIDATE);\n\t\t}\n\t\tif ( this.password !== this.confirmpwd) {\n\t\t\treturn reject(this.TWO_PASSWORD_IS_NOT_MATCH);\n\t\t}\n\t\tresolve();\n\t}).then( () => {\n\t\treturn this.save();\n\t})\n}\n/*\n* 用户登录\n* */\n// User.prototype.login = function() {\n// \treturn new Promise( (resolve, reject) => {\n// \t\tthis.type = ['name','email'].indexOf(this.type) != -1 ? this.type : 'name';\n// \t\tif (this.type == 'name') {\n// \t\t\treturn this.getUserInfoByUserName(this.account).then( userInfo => {\n// \t\t\t\tif (userInfo) {\n// \t\t\t\t\t//存在该用户\n// \t\t\t\t\tconsole.log(userInfo.password, this.password)\n// \t\t\t\t\tif (userInfo.password == this.password) {\n// \t\t\t\t\t\treturn resolve(userInfo);\n// \t\t\t\t\t} else {\n// \t\t\t\t\t\t//密码错误\n// \t\t\t\t\t\treturn reject();\n// \t\t\t\t\t}\n// \t\t\t\t} else {\n// \t\t\t\t\treturn reject();\n// \t\t\t\t}\n// \t\t\t} )\n// \t\t} else {\n// \t\t\treturn this.getUserInfoByEmail(this.account).then( userInfo => {\n// \t\t\t\tif (userInfo) {\n// \t\t\t\t\t//存在该用户\n// \t\t\t\t\tif (userInfo.password == this.password) {\n// \t\t\t\t\t\treturn resolve(userInfo);\n// \t\t\t\t\t} else {\n// \t\t\t\t\t\t//密码错误\n// \t\t\t\t\t\treturn reject();\n// \t\t\t\t\t}\n// \t\t\t\t} else {\n// \t\t\t\t\treturn reject();\n// \t\t\t\t}\n// \t\t\t} )\n// \t\t}\n// \t});\n// }\n\n/**\n * 验证用户名\n * @return {[type]} [description]\n */\nUser.prototype.verifyUserName = function() {\n\treturn this.matchRegexp.name.test(this.name);\n}\n/**\n * 验证密码\n * @return {[type]} [description]\n */\nUser.prototype.verifyPassWord = function() {\n\treturn this.matchRegexp.password.test(this.password);\n}\n/**\n * 验证邮箱\n * @return {[type]} [description]\n */\nUser.prototype.verifyEmail = function() {\n\treturn this.matchRegexp.email.test(this.email);\n}\n/**\n * 通过用户 USERNAME 获取用户信息\n * @return {[type]} [description]\n */\nUser.prototype.getUserInfoByUserName = function(name) {\n\treturn User.findOne({\n\t\tname: name\n\t}).exec();\n}\n/**\n * 通过用户 EMAIL 获取用户信息\n * @return {[type]} [description]\n */\nUser.prototype.getUserInfoByEmail = function(email) {\n\treturn User.findOne({\n\t\temail: email\n\t}).exec();\n}\n/**\n * 通过用户 uid 获取用户信息\n * @return {[type]} [description]\n */\nUser.prototype.getUserInfoById = function(uid) {\n\treturn User.findOne({\n\t\t_id: uid\n\t}).exec();\n}\n\nmodule.exports = User;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** /Users/closer/workspace/blog_tset副本/app/models/User.js\n ** module id = 39\n ** module chunks = 0\n **/","var crypto = require('crypto')\nvar bcrypt = require('bcrypt')\n\nfunction getRandomString(len) {\n  if (!len) len = 16\n\n  return crypto.randomBytes(Math.ceil(len / 2)).toString('hex')\n}\n\nvar should = require('should')\nvar app = require('../../app')\nvar Tag = require('../../app/models/tag')\n\nvar tag\n\n// test\ndescribe('<Unit Test', function() {\n  describe('Model Tag:', function() {\n    before(function(done) {\n      tag = {\n        name: getRandomString()\n      }\n\n      done()\n    })\n\n    describe('Before Method save', function() {\n      it('should begin without test tag', function(done) {\n        Tag.find({name: tag.name}, function(err, tags) {\n          tags.should.have.length(0)\n\n          done()\n        })\n      })\n    })\n\n    describe('Tag save', function() {\n      it('should save without problems', function(done) {\n        var _tag = new Tag(tag)\n\n        _tag.save(function(err) {\n          should.not.exist(err)\n          _tag.remove(function(err) {\n            should.not.exist(err)\n            done()\n          })\n        })\n      })\n\n      it('should fail to save an existing tag', function(done) {\n        var _tag1 = new Tag(tag)\n\n        _tag1.save(function(err) {\n          should.not.exist(err)\n\n          var _tag2 = new Tag(tag)\n\n          _tag2.save(function(err) {\n            should.exist(err)\n\n            _tag1.remove(function(err) {\n              if (!err) {\n                _tag2.remove(function(err) {\n                  done()\n                })\n              }\n            })\n          })\n        })\n      })\n    })\n\n    after(function(done) {\n      // clear tag info\n      done()\n    })\n  })\n})\n\n\n/*****************\n ** WEBPACK FOOTER\n ** /Users/closer/workspace/blog_tset副本/test/tag/tag.test.js\n ** module id = 40\n ** module chunks = 0\n **/","var crypto = require('crypto')\nvar bcrypt = require('bcrypt')\n\nfunction getRandomString(len) {\n  if (!len) len = 16\n\n  return crypto.randomBytes(Math.ceil(len / 2)).toString('hex')\n}\n\nvar should = require('should')\nvar app = require('../../app')\nvar User = require('../../app/models/user')\n\nvar user\n\n// test\ndescribe('<Unit Test', function() {\n  describe('Model User:', function() {\n    before(function(done) {\n      user = {\n        name: getRandomString(),\n        password: 'password'\n      }\n\n      done()\n    })\n\n    describe('Before Method save', function() {\n      it('should begin without test user', function(done) {\n        User.find({name: user.name}, function(err, users) {\n          users.should.have.length(0)\n\n          done()\n        })\n      })\n    })\n\n    describe('User save', function() {\n      it('should save without problems', function(done) {\n        var _user = new User(user)\n\n        _user.save(function(err) {\n          should.not.exist(err)\n          _user.remove(function(err) {\n            should.not.exist(err)\n            done()\n          })\n        })\n      })\n\n      it('should password be hashed correctly', function(done) {\n        var password = user.password\n        var _user = new User(user)\n\n        _user.save(function(err) {\n          should.not.exist(err)\n          _user.password.should.not.have.length(0)\n\n          bcrypt.compare(password, _user.password, function(err, isMatch) {\n            should.not.exist(err)\n            isMatch.should.equal(true)\n\n            _user.remove(function(err) {\n              should.not.exist(err)\n              done()\n            })\n          })\n        })\n      })\n\n      it('should have default role 0', function(done) {\n        var _user = new User(user)\n\n        _user.save(function(err) {\n          _user.role.should.equal(0)\n\n          _user.remove(function(err) {\n            done()\n          })\n        })\n      })\n\n      it('should fail to save an existing user', function(done) {\n        var _user1 = new User(user)\n\n        _user1.save(function(err) {\n          should.not.exist(err)\n\n          var _user2 = new User(user)\n\n          _user2.save(function(err) {\n            should.exist(err)\n\n            _user1.remove(function(err) {\n              if (!err) {\n                _user2.remove(function(err) {\n                  done()\n                })\n              }\n            })\n          })\n        })\n      })\n    })\n\n    after(function(done) {\n      // clear user info\n      done()\n    })\n  })\n})\n\n\n/*****************\n ** WEBPACK FOOTER\n ** /Users/closer/workspace/blog_tset副本/test/user/user.test.js\n ** module id = 41\n ** module chunks = 0\n **/"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACzpGA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AClzNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACnhJA;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AClDA;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACljxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AClsourceRoot":""}